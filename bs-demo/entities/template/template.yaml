apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: github-repository-creation
  title: github-repository-creation
  description: A template that creates just a GitHub repository.
spec:
  owner: user:rowan04
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          # it seems the below is in discussion to be worked upon:
          # https://github.com/backstage/backstage/issues/15988, https://github.com/backstage/backstage/issues/16275, https://github.com/backstage/backstage/pull/17746,
          # https://github.com/backstage/backstage/pull/23893, https://github.com/backstage/backstage/pull/23283
          # possibly to be completed with this https://github.com/backstage/backstage/issues/10430
          # default: ${{ user.entity }}
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: GitHub Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - cedadev

        testCoverage:
          title: Test Coverage
          type: integer
          minimum: 0
          maximum: 100
          multipleOf: 5
          default: 100
          ui:widget: range

        mccabeCodeQuality:
          title: McCabe Code Quality
          type: string
          enum: [A, B, C, D, E, F]
          default: A

        banditSkips:
          title: Bandit Skips
          type: array
          items: {
            title: "Add error to skip:",
            type: string,
            # uncomment the following lines to have a preset list of errors, instead of custom entry
            # enum: [
            #   "error1",
            #   "error2",
            #   "error3",
            #   "error4"
            # ]
          }
          # uncomment the following lines with the enum above to use checkboxes on the preset error list
          # uniqueItems: true
          # ui:widget: checkboxes

  # here's the steps that are executed in series in the scaffolder backend, using parameter data
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./github_content
        targetPath: ./ghub
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          testCoverage: ${{ parameters.testCoverage }}
          mccabeCodeQuality: ${{ parameters.mccabeCodeQuality }}
          banditSkips: ${{ parameters.banditSkips }}
          gitAuthorName: ${{ user.entity.metadata.name }}
          gitAuthorEmail: ${{ user.entity.spec.profile.email }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        sourcePath: ./ghub
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}

---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: gitlab-repository-creation
  title: gitlab-repository-creation
  description: A template that creates just a GitLab repository.
spec:
  owner: user:rowan04
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          # it seems the below is in discussion to be worked upon:
          # https://github.com/backstage/backstage/issues/15988, https://github.com/backstage/backstage/issues/16275, https://github.com/backstage/backstage/pull/17746,
          # https://github.com/backstage/backstage/pull/23893, https://github.com/backstage/backstage/pull/23283
          # possibly to be completed with this https://github.com/backstage/backstage/issues/10430
          # default: ${{ user.entity }}
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: GitLab Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab.ceda.ac.uk
            allowedOwners:
              - cedadev

  # here's the steps that are executed in series in the scaffolder backend, using parameter data
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./gitlab_content
        targetPath: ./glab
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          gitAuthorName: ${{ user.entity.metadata.name }}
          gitAuthorEmail: ${{ user.entity.spec.profile.email }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        sourcePath: ./glab
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        allowedHosts:
          - gitlab.ceda.ac.uk
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        settings:
          visibility: internal

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}

---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: github-and-gitlab-repository-creation
  title: github-and-gitlab-repository-creation
  description: A template that creates both a GitHub and GitLab repository
spec:
  owner: user:rowan04
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          ui:options:
            rows: 5
        owner:
          title: Owner
          type: string
          description: Owner of the component
          # it seems the below is in discussion to be worked upon:
          # https://github.com/backstage/backstage/issues/15988, https://github.com/backstage/backstage/issues/16275, https://github.com/backstage/backstage/pull/17746,
          # https://github.com/backstage/backstage/pull/23893, https://github.com/backstage/backstage/pull/23283
          # possibly to be completed with this https://github.com/backstage/backstage/issues/10430
          # default: ${{ user.entity }}
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group, User]

    - title: Choose a GitHub location
      required:
        - githubRepoUrl
      properties:
        githubRepoUrl:
          title: GitHub Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - cedadev

        testCoverage:
          title: Test Coverage
          type: integer
          minimum: 0
          maximum: 100
          multipleOf: 5
          default: 100
          ui:widget: range

        mccabeCodeQuality:
          title: McCabe Code Quality
          type: string
          enum: [A, B, C, D, E, F]
          default: A

        banditSkips:
          title: Bandit Skips
          type: array
          items: {
            title: "Add error to skip:",
            type: string,
            # uncomment the following lines to have a preset list of errors, instead of custom entry
            # enum: [
            #   "error1",
            #   "error2",
            #   "error3",
            #   "error4"
            # ]
          }
          # uncomment the following lines with the enum above to use checkboxes on the preset error list
          # uniqueItems: true
          # ui:widget: checkboxes

    - title: Choose a GitLab location
      required:
        - gitlabRepoUrl
      properties:
        gitlabRepoUrl:
          title: Gitlab Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab.ceda.ac.uk
            allowedOwners:
              - cedadev

  # here's the steps that are executed in series in the scaffolder backend, using parameter data
  steps:

    - id: fetch-base-github
      name: Fetch Base for GitHub
      action: fetch:template
      input:
        url: ./github_content
        targetPath: ./ghub
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          testCoverage: ${{ parameters.testCoverage }}
          mccabeCodeQuality: ${{ parameters.mccabeCodeQuality }}
          banditSkips: ${{ parameters.banditSkips }}
          gitAuthorName: ${{ user.entity.metadata.name }}
          gitAuthorEmail: ${{ user.entity.spec.profile.email }}
          destination: ${{ parameters.githubRepoUrl | parseRepoUrl }}

    - id: publish-github
      name: Publish GitHub
      action: publish:github
      input:
        sourcePath: ./ghub
        gitAuthorName: ${{ user.entity.metadata.name }}
        gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.githubRepoUrl }}
        defaultBranch: main

    - id: fetch-base-gitlab
      name: Fetch Base for GitLab
      action: fetch:template
      input:
        url: ./gitlab_content
        targetPath: ./glab
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          gitAuthorName: ${{ user.entity.metadata.name }}
          gitAuthorEmail: ${{ user.entity.spec.profile.email }}
          destination: ${{ parameters.gitlabRepoUrl | parseRepoUrl }}
          githubUrl: ${{ steps['publish-github'].output.remoteUrl }}

    - id: publish-gitlab
      name: Publish GitLab
      action: publish:gitlab
      input:
        sourcePath: ./glab
        gitAuthorName: ${{ user.entity.metadata.name }}
        # below commented out until my personal email gets added to my gitlab account (wont work atm)
        # gitAuthorEmail: ${{ user.entity.spec.profile.email }}
        gitAuthorEmail: rowan.moss@stfc.ac.uk
        allowedHosts:
          - gitlab.ceda.ac.uk
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.gitlabRepoUrl }}
        defaultBranch: main
        settings:
          visibility: internal

    # uncomment the following lines if you want to register the github repo in the catalog
    # - id: register-github
    #   name: Register GitHub
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps['publish-github'].output.repoContentsUrl }}
    #     catalogInfoPath: '/catalog-info.yaml'

    - id: register-gitlab
      name: Register GitLab
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-gitlab'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: GitHub Repository
        url: ${{ steps['publish-github'].output.remoteUrl }}
      # uncomment the following lines if you are registering the github repo in the catalog
      # - title: Open GitHub repo in catalog
      #   icon: catalog
      #   entityRef: ${{ steps['register-github'].output.entityRef }}
      - title: Open GitLab repo in catalog
        icon: catalog
        entityRef: ${{ steps['register-gitlab'].output.entityRef }}
      - title: GitLab Repository
        url: ${{ steps['publish-gitlab'].output.remoteUrl }}

---
